name: Reusable Codecov

on:
  push:

jobs:
  industrial_ci:
    name: Industrial CI
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        # Adjust the ROS distributions and repos as needed
        ROS_DISTRO: [ humble ]
        ROS_REPO: [ main ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Industrial CI Checks
        # This uses the official industrial_ci action.
        uses: ros-industrial/industrial_ci@master
        env:
          ROS_DISTRO: ${{ matrix.ROS_DISTRO }}
          ROS_REPO: ${{ matrix.ROS_REPO }}
          # (Optional) Other industrial_ci environment variables can be set here.
  
  coverage:
    name: Code Coverage
    needs: industrial_ci
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup ROS 2 and Coverage Tools
        run: |
          sudo apt-get update
          # Install prerequisites: curl, gnupg, lsb-release
          sudo apt-get install -y curl gnupg lsb-release lcov
          # Add the ROS 2 apt repository (this example uses Humble)
          sudo sh -c 'echo "deb http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list'
          curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
          sudo apt-get update
          # Install ROS 2 Humble Desktop (or another ROS 2 package set) and colcon extensions.
          sudo apt-get install -y ros-humble-desktop python3-colcon-common-extensions python3-colcon-lcov-result
          # Make ROS environment available in subsequent steps.
          echo 'source /opt/ros/humble/setup.bash' >> $BASH_ENV
          source $BASH_ENV

      - name: Build with Coverage Flags
        run: |
          # Ensure the ROS setup is loaded.
          source /opt/ros/humble/setup.bash
          # Build your workspace with coverage instrumentation.
          # Adjust the directory if your workspace is not the repository root.
          colcon build \
            --cmake-args \
              "-DCMAKE_BUILD_TYPE=Debug" \
              "-DCMAKE_CXX_FLAGS=--coverage" \
              "-DCMAKE_C_FLAGS=--coverage"

      - name: Run Tests
        run: |
          source /opt/ros/humble/setup.bash
          colcon test
          colcon test-result --verbose

      - name: Generate Coverage Report
        run: |
          source /opt/ros/humble/setup.bash
          # This plugin scans your build directory for .gcno and .gcda files
          # and generates a unified LCOV file (coverage.info).
          colcon lcov-result --lcov-file coverage.info

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.info
          flags: unittests
          name: codecov-coverage
          # Uncomment and set your token if your repo is private:
          # token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true
